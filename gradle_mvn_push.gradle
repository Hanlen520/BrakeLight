apply plugin: 'maven'

/*
 * Copyright 2017 Kenneth Yo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//release 地址
def RELEASE_REPOSITORY_URL = "http://172.20.10.54:8081/nexus/content/repositories/releases/"
//snapshots 地址
def SNAPSHOT_REPOSITORY_URL = "http://172.20.10.54:8081/nexus/content/repositories/snapshots/"
//判断 VERSION_NAME 如果以`-SHAPSHOT`结尾,则上传地址为 snapshot 地址
def REPOSITORY_URL = VERSION_NAME.endsWith("-SNAPSHOT") ? SNAPSHOT_REPOSITORY_URL :
    RELEASE_REPOSITORY_URL;

def getMavenProperty(key) {
  Properties properties = new Properties()
  properties.load(new FileInputStream(new File("${project.rootDir}/your_login_local.properties")))
  return properties.getProperty(key)
}

logger.info("groupId = %s\t\nartifactId = %s\t\nversion = %s\t\nrepository = %s\t\n", GROUP,
    ARTIFACT_ID, getMavenProperty("NEXUS_USERNAME"), getMavenProperty("NEXUS_PASSWORD"))

group = GROUP
version = VERSION_NAME

afterEvaluate { project ->
  uploadArchives {
    repositories.mavenDeployer {
      pom.groupId = GROUP
      pom.artifactId = ARTIFACT_ID
      pom.version = VERSION_NAME
      repository(url: REPOSITORY_URL) {
        authentication(userName: getMavenProperty("NEXUS_USERNAME"),
            password: getMavenProperty("NEXUS_PASSWORD"))
      }
    }
  }
  task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
  }

  artifacts {
    archives androidSourcesJar
  }
}